// config/database.js
// –§–∞–π–ª –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB

const { MongoClient } = require('mongodb');
require('dotenv').config();

// –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç MongoDB
const client = new MongoClient(process.env.MONGODB_URI);

// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
let database;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
async function connectToDatabase() {
    try {
        // –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB
        await client.connect();
        console.log('‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–∏–ª–∏—Å—å –∫ MongoDB');
        
        // –í—ã–±–∏—Ä–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        database = client.db();
        
        return database;
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB:', error);
        process.exit(1); // –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –ø—Ä–∏ –æ—à–∏–±–∫–µ
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
function getDatabase() {
    if (!database) {
        throw new Error('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞! –°–Ω–∞—á–∞–ª–∞ –≤—ã–∑–æ–≤–∏—Ç–µ connectToDatabase()');
    }
    return database;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
async function closeDatabase() {
    await client.close();
    console.log('üîå –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB –∑–∞–∫—Ä—ã—Ç–æ');
}

module.exports = {
    connectToDatabase,
    getDatabase,
    closeDatabase
};